{"results": [{"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 15, "col": 15}, "end": {"line": 21, "col": 5}, "extra": {"message": "Detected non-literal calls to exec(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 15, "col": 20, "offset": 489}, "end": {"line": 15, "col": 58, "offset": 527}, "abstract_content": "'cp -R '+clone_path+' '+tmp_path", "unique_id": {"type": "AST", "md5sum": "3017d00e132bb6866712a28515f3bc85"}}, "$EXEC": {"start": {"line": 15, "col": 15, "offset": 484}, "end": {"line": 15, "col": 19, "offset": 488}, "abstract_content": "exec", "unique_id": {"type": "id", "value": "exec", "kind": "Global", "sid": 4}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "  var child = exec('cp -R ' + clone_path + ' ' + tmp_path, function (error, stdout, stderr) {\n      if (error !== null) {\n        util.puts('exec error: ' + error);\n        return callback(error, null);\n      }\n      return callback(null, tmp_path);\n  });"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 26, "col": 15}, "end": {"line": 32, "col": 5}, "extra": {"message": "Detected non-literal calls to exec(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 26, "col": 20, "offset": 847}, "end": {"line": 26, "col": 41, "offset": 868}, "abstract_content": "'rm -rf '+directory", "unique_id": {"type": "AST", "md5sum": "461d55ea43b79b54f00aed3515c287ad"}}, "$EXEC": {"start": {"line": 26, "col": 15, "offset": 842}, "end": {"line": 26, "col": 19, "offset": 846}, "abstract_content": "exec", "unique_id": {"type": "id", "value": "exec", "kind": "Global", "sid": 4}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "  var child = exec('rm -rf ' + directory, function (error, stdout, stderr) {\n      if (error !== null) {\n        util.puts('exec error: ' + error);\n        return callback(error, null);\n      }\n      return callback(null, null);    \n  });"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 123, "col": 11}, "end": {"line": 123, "col": 33}, "extra": {"message": "Detected non-literal calls to execute_function(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 123, "col": 28, "offset": 3722}, "end": {"line": 123, "col": 32, "offset": 3726}, "abstract_content": "repo", "unique_id": {"type": "id", "value": "repo", "kind": "Param", "sid": 138}}, "$EXEC": {"start": {"line": 123, "col": 11, "offset": 3705}, "end": {"line": 123, "col": 27, "offset": 3721}, "abstract_content": "execute_function", "unique_id": {"type": "id", "value": "execute_function", "kind": "Local", "sid": 134}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "          execute_function(repo);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 141, "col": 7}, "end": {"line": 141, "col": 25}, "extra": {"message": "Detected non-literal calls to execute_process(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 141, "col": 23, "offset": 4493}, "end": {"line": 141, "col": 24, "offset": 4494}, "abstract_content": "t", "unique_id": {"type": "id", "value": "t", "kind": "Param", "sid": 146}}, "$EXEC": {"start": {"line": 141, "col": 7, "offset": 4477}, "end": {"line": 141, "col": 22, "offset": 4492}, "abstract_content": "execute_process", "unique_id": {"type": "id", "value": "execute_process", "kind": "Global", "sid": 144}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "      execute_process(t);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 144, "col": 5}, "end": {"line": 144, "col": 37}, "extra": {"message": "Detected non-literal calls to execute_process(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 144, "col": 21, "offset": 4535}, "end": {"line": 144, "col": 36, "offset": 4550}, "abstract_content": "process.argv[2]", "unique_id": {"type": "AST", "md5sum": "bae9032e6fc1a57957a19a37bbfdf1a4"}}, "$EXEC": {"start": {"line": 144, "col": 5, "offset": 4519}, "end": {"line": 144, "col": 20, "offset": 4534}, "abstract_content": "execute_process", "unique_id": {"type": "id", "value": "execute_process", "kind": "Global", "sid": 144}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "    execute_process(process.argv[2]);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/git.js", "start": {"line": 232, "col": 3}, "end": {"line": 241, "col": 5}, "extra": {"message": "Detected non-literal calls to exec(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 232, "col": 8, "offset": 9115}, "end": {"line": 232, "col": 19, "offset": 9126}, "abstract_content": "call_string", "unique_id": {"type": "id", "value": "call_string", "kind": "Param", "sid": 95}}, "$EXEC": {"start": {"line": 232, "col": 3, "offset": 9110}, "end": {"line": 232, "col": 7, "offset": 9114}, "abstract_content": "exec", "unique_id": {"type": "id", "value": "exec", "kind": "Global", "sid": 4}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "  exec(call_string, options,\n    function (error, stdout, stderr) {\n      if (error != null) {\n        var result = error.toString();\n        callback(result != null ? result.trim() : result, null);\n      } else {\n        var result = stdout.toString();\n        callback(null, result != null ? result.trim() : result)\n      }\n  });"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-child-process", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/git_file_operations.js", "start": {"line": 128, "col": 15}, "end": {"line": 134, "col": 5}, "extra": {"message": "Detected non-literal calls to exec(). This could lead to a command\ninjection vulnerability.\n", "metavars": {"$CMD": {"start": {"line": 128, "col": 20, "offset": 3855}, "end": {"line": 128, "col": 35, "offset": 3870}, "abstract_content": "'rm -rf '+dir", "unique_id": {"type": "AST", "md5sum": "8406ad776a9f320bdc8619d68774679b"}}, "$EXEC": {"start": {"line": 128, "col": 15, "offset": 3850}, "end": {"line": 128, "col": 19, "offset": 3854}, "abstract_content": "exec", "unique_id": {"type": "id", "value": "exec", "kind": "Global", "sid": 3}}}, "metadata": {"cwe": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-child-process.js"}, "severity": "WARNING", "is_ignored": false, "lines": "  var child = exec('rm -rf ' + dir, function (error, stdout, stderr) {\n      if (error !== null) {\n        util.puts('exec error: ' + error);\n        return callback(error, null);\n      }\n      return callback(null, null);    \n  });"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-non-literal-require", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/index.js", "start": {"line": 8, "col": 15}, "end": {"line": 8, "col": 35}, "extra": {"message": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n", "metavars": {"$OBJ": {"start": {"line": 8, "col": 23, "offset": 524}, "end": {"line": 8, "col": 34, "offset": 535}, "abstract_content": "'./'+path", "unique_id": {"type": "AST", "md5sum": "3b2fa8c7d175219da4d515f9f886f55a"}}}, "metadata": {"cwe": "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-require.js"}, "severity": "WARNING", "is_ignored": false, "lines": "\tvar module = require('./' + path);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-non-literal-require", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/index.js", "start": {"line": 16, "col": 15}, "end": {"line": 16, "col": 41}, "extra": {"message": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n", "metavars": {"$OBJ": {"start": {"line": 16, "col": 23, "offset": 650}, "end": {"line": 16, "col": 40, "offset": 667}, "abstract_content": "'../zlib/'+path", "unique_id": {"type": "AST", "md5sum": "b39541fd8b5d9f9a3047134f9611886a"}}}, "metadata": {"cwe": "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-require.js"}, "severity": "WARNING", "is_ignored": false, "lines": "\tvar module = require('../zlib/' + path);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-non-literal-require", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/index.js", "start": {"line": 24, "col": 15}, "end": {"line": 24, "col": 44}, "extra": {"message": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n", "metavars": {"$OBJ": {"start": {"line": 24, "col": 23, "offset": 785}, "end": {"line": 24, "col": 43, "offset": 805}, "abstract_content": "'../sprintf/'+path", "unique_id": {"type": "AST", "md5sum": "1b7cb6dea38c42bda66daabe874ec69a"}}}, "metadata": {"cwe": "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-require.js"}, "severity": "WARNING", "is_ignored": false, "lines": "\tvar module = require('../sprintf/' + path);"}}, {"check_id": "home.backend.semgrep_rules.javascript.lang.security.detect-non-literal-require", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/index.js", "start": {"line": 32, "col": 15}, "end": {"line": 32, "col": 41}, "extra": {"message": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n", "metavars": {"$OBJ": {"start": {"line": 32, "col": 23, "offset": 960}, "end": {"line": 32, "col": 40, "offset": 977}, "abstract_content": "'../diff/'+path", "unique_id": {"type": "AST", "md5sum": "a30fd49fc8e31e38c11e9f3d9aba1d67"}}}, "metadata": {"cwe": "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')", "owasp": "A1: Injection", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-require.js"}, "severity": "WARNING", "is_ignored": false, "lines": "\tvar module = require('../diff/' + path);"}}, {"check_id": "home.backend.semgrep_rules.javascript.nodejsscan.node_sha1", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/loose_storage.js", "start": {"line": 124, "col": 14}, "end": {"line": 124, "col": 39}, "extra": {"message": "SHA1 is a a weak hash which is known to have collision. Use a strong hashing function.", "metavars": {"$X": {"start": {"line": 124, "col": 14, "offset": 3920}, "end": {"line": 124, "col": 20, "offset": 3926}, "abstract_content": "crypto", "unique_id": {"type": "id", "value": "crypto", "kind": "Global", "sid": 6}}}, "metadata": {"owasp": "A9: Using Components with Known Vulnerabilities", "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"}, "severity": "WARNING", "is_ignored": false, "lines": "  var hash = crypto.createHash(\"sha1\");"}}, {"check_id": "home.backend.semgrep_rules.javascript.nodejsscan.node_sha1", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/raw_object.js", "start": {"line": 18, "col": 14}, "end": {"line": 18, "col": 39}, "extra": {"message": "SHA1 is a a weak hash which is known to have collision. Use a strong hashing function.", "metavars": {"$X": {"start": {"line": 18, "col": 14, "offset": 839}, "end": {"line": 18, "col": 20, "offset": 845}, "abstract_content": "crypto", "unique_id": {"type": "id", "value": "crypto", "kind": "Global", "sid": 1}}}, "metadata": {"owasp": "A9: Using Components with Known Vulnerabilities", "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"}, "severity": "WARNING", "is_ignored": false, "lines": "  var hash = crypto.createHash(\"sha1\");"}}, {"check_id": "home.backend.semgrep_rules.javascript.nodejsscan.node_insecure_random_generator", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/benchmarks/benchmark.js", "start": {"line": 10, "col": 77}, "end": {"line": 10, "col": 96}, "extra": {"message": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.", "metavars": {}, "metadata": {"owasp": "A9: Using Components with Known Vulnerabilities", "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"}, "severity": "WARNING", "is_ignored": false, "lines": "  var filename = 'git_test' + new Date().getTime().toString() + Math.round((Math.random(100000) * 300)).toString();"}}], "errors": [{"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/repo.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}, {"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/binary_parser.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}, {"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/git.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}, {"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/repository.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}, {"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/zlib/zlib.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}, {"type": "MatchTimeoutError", "code": 9, "level": "warn", "path": "/home/backend/downloaded_packages/npm/git-0.1.5/package/lib/git/pack_storage.js", "rule_id": "home.backend.semgrep_rules.javascript.shelljs.security.shelljs-exec-injection"}]}
